name: Localize CI

on:
  push:
    branches:
      - main
      - 'stable/**'

  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - uses: pre-commit/action@v3.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  test-sqlite:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        python: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox tox-gh-actions
      - name: Test with tox
        run: tox

  test-postgres:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        python: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        database: ["postgres"]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        id: install-dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox tox-gh-actions
      - name: Test with tox
        id: test-with-tox
        run: |
          tox
        env:
          DB_NAME: postgres
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_HOST: localhost
          DB_PORT: 5432
          DATABASE: ${{ matrix.database }}

  coverage:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        python: ['3.8']

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          pip install flit
          flit install --deps production --extras testing
          pip install coverage==5.4
      - name: Test
        run: |
          coverage run testmanage.py test
      - name: 'Upload coverage to Codecov'
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
